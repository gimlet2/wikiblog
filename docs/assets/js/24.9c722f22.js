(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{421:function(t,s,a){"use strict";a.r(s);var n=a(11),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("In my previous "),a("RouterLink",{attrs:{to:"/2018/03/26/java10/"}},[t._v("article")]),t._v(" I’ve been talking about using "),a("strong",[t._v("Java 10")]),t._v(" to build and run your "),a("a",{attrs:{href:"https://projects.spring.io/spring-boot/",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Spring Boot")]),a("OutboundLink")],1),t._v(" app. Now it is time to talk how to put it in Docker container. Better support of containerization was one of the main features of Java 10 release. So, let’s go!\n"),t._v("\nThat is fairly simple process, so just take a look on following code snippet:")],1),t._v(" "),a("div",{staticClass:"language-dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" debian"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("slim AS builder\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" set "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ex && \\\n    apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get update && apt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("y wget unzip && \\\n    wget https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//download.java.net/java/GA/jdk11/9/GPL/openjdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("11.0.2_linux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("x64_bin.tar.gz "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nv "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("O jdk.tar.gz "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nv && \\\n    mkdir "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p /opt/jdk && \\\n    tar zxvf jdk.tar.gz "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("C /opt/jdk "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("strip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("components=1 && \\\n    rm jdk.tar.gz && \\\n    rm /opt/jdk/lib/src.zip\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" /opt/jdk/bin/jlink \\\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("path /opt/jdk/jmods \\\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("verbose \\\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("modules java.base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("java.logging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("java.xml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("jdk.unsupported"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("java.sql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("java.naming"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("java.desktop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("java.management"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("java.security.jgss"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("java.instrument \\\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("output /opt/jdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("minimal \\\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("compress 2 \\\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("files\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Second stage, add only our custom jdk9 distro and our app")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" debian"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("slim\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("from=builder /opt/jdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("minimal /opt/jdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("minimal\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" JAVA_HOME=/opt/jdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("minimal\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" PATH="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$PATH:$JAVA_HOME/bin"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" APP_TIMEZONE=UTC\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 8080\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENTRYPOINT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/launch.sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" launch.sh /\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" chmod +x /launch.sh\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" build/libs/you"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app.jar /app.jar\n")])])]),a("p",[t._v("Here, as you can see, I use multi-stage Docker build file. Quick note: multi-stage builds are supported with "),a("strong",[t._v("Docker 17.05")]),t._v(" or higher but result image is backward compatible(at least from my experience). On the first stage it downloads "),a("strong",[t._v("JDK")]),t._v(" from Oracle’s, but it can make sense to store your own copy somewhere closer to your build server since it isn’t that small — a little bit less then 200mb. So, it is downloaded, unziped and ready to be used. But not so quick.")]),t._v(" "),a("p",[t._v("As you probably remember, "),a("strong",[t._v("Java 9")]),t._v(" gave us module system and "),a("strong",[t._v("JDK")]),t._v(" itself is also modularized. That means we don’t have to bring whole "),a("strong",[t._v("JDK")]),t._v(" to production but we could build our own striped version specifically for our app’s needs. There is jlink tool provided for that. Just take a look how it is used in the build process. The modules listed there should be enough to run a typical "),a("strong",[t._v("Spring Boot")]),t._v(" application. In my production case I had to put java.scripting, jdk.scripting.nashorn to the list as well.")]),t._v(" "),a("p",[t._v("On the second stage it copies results from previous one, defines some environment variables, exposes port, copy launch.sh and app’s artifact. Not a rocket science at all.")]),t._v(" "),a("p",[t._v("And here is launch.sh script I’ve just mentioned:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("check_var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" -z "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error: missing environmental variable '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v('. exit"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ncheck_var "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${JAVA_XMS}")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JAVA_XMS"')]),t._v("\ncheck_var "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${JAVA_XMX}")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JAVA_XMX"')]),t._v("\ncheck_var "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${APP_TIMEZONE}")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"APP_TIMEZONE"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("XMS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${JAVA_XMS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":-")]),t._v("none}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("XMX")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${JAVA_XMX"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":-")]),t._v("none}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("TIMEZONE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${APP_TIMEZONE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":-")]),t._v("none}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("JAVA_OPTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-Xmx'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${XMX}")]),t._v(" -Xms"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${XMS}")]),t._v(" -Duser.timezone="),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${TIMEZONE}")]),t._v(" -Dspring.profiles.active="),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${SPRING_PROFILES_ACTIVE}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${OPTIONS}")]),t._v('"')]),t._v("\n\njava "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${JAVA_OPTS}")]),t._v(" -jar /app.jar\n")])])]),a("p",[t._v("That is just a small helper to ensure that there are all important things provided, etc. But, sure, it is optional.")]),t._v(" "),a("p",[t._v("And that should be enough to put your app to the production. Please, put some comments down if you have some thoughts how to make it better!")])])}),[],!1,null,null,null);s.default=e.exports}}]);