(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{428:function(t,s,e){"use strict";e.r(s);var a=e(11),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("strong",[t._v("Python")]),t._v(" based apps are significant part of the ecosystem in our company. In the era of microservices there is really no difference which technology is in use under the hood. But each service should provide its own API and the way to monitor its state.")]),t._v(" "),e("p",[t._v("In our setup we use "),e("a",{attrs:{href:"https://prometheus.io/",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("Prometheus")]),e("OutboundLink")],1),t._v(" to aggregate metrics from all our services. And it works fine. Especially with our "),e("strong",[t._v("JVM")]),t._v(" apps. But that was not a case for all out Pythons till today.")]),t._v(" "),e("p",[t._v("As a historical tradition our Pythons apps are mostly done with "),e("a",{attrs:{href:"http://flask.pocoo.org/",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("Flask")]),e("OutboundLink")],1),t._v(". And it is a nice framework. In some cases it is also wrapped with "),e("a",{attrs:{href:"http://gunicorn.org/",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[t._v("Gunicorn")]),e("OutboundLink")],1),t._v(". And here is a tutorial how to make it work with Prometheus:\n")]),t._v(" "),e("ol",[e("li",[t._v("Add the dependency to your project "),e("strong",[t._v("setup.py")]),t._v(" to prometheus_client==0.1.1")]),t._v(" "),e("li",[t._v("Inside your application define some metrics you want to collect, for example: FLASK_REQUEST_LATENCY = Histogram(__name__.replace(‘.’, ‘_’) + ‘_request_latency_seconds’, ‘Flask Request Latency’) .")]),t._v(" "),e("li",[t._v("Annotate a method you want to measure with @FLASK_REQUEST_LATENCY.time()")]),t._v(" "),e("li",[t._v("Add endpoint to expose the statistics:")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/stats'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" methods"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("metrics")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" generate_latest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registry"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#registry is global")]),t._v("\n")])])]),e("p",[t._v("And that’s it! If your app is just plain Flask without Gunicorn. To make it work in multiprocessor scenario you need to make several additional steps:")]),t._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[t._v("Create config for Gunicorn:")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("worker_exit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" worker"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" prometheus_client "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" multiprocess\n    multiprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mark_process_dead"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("worker"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("ol",{attrs:{start:"6"}},[e("li",[e("p",[t._v("This config can be provided to "),e("strong",[t._v("gunicorn")]),t._v(" cli with "),e("strong",[t._v("-c")]),t._v("  flag.")])]),t._v(" "),e("li",[e("p",[t._v("Add Environment variable prometheus_multiproc_dir that should point to a directory where Prometheus can temporarily store the metrics. If you use "),e("strong",[t._v("Kubernetes")]),t._v(" update the deployment descriptor to mount "),e("strong",[t._v("Volume")]),t._v(" with "),e("strong",[t._v("emptyDir")]),t._v("  type.")])]),t._v(" "),e("li",[e("p",[t._v("And the last thing to do — update code for your /stats endpoint like this:")])])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/stats'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" methods"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("metrics")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    registry "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CollectorRegistry"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    multiprocess"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MultiProcessCollector"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registry"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" generate_latest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registry"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n")])])]),e("p",[t._v("I hope this short guide can be useful and will help you to make your apps measurable and system more reliable.")])])}),[],!1,null,null,null);s.default=n.exports}}]);